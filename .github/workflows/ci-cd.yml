name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  gitleaks:
    name: Gitleaks Scanner
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}


  security-check:
    name: Security Vulnerabilities
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Security Scan
        uses: aquasecurity/trivy-action@v0.12
        with:
          scan-type: filesystem
          format: table

  dependency-check:
    name: Dependency Updates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Check Dependencies
        uses: JoranHarmse/nuget-outdated-action@v1.0

  code-tests:
    name: Code Quality Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Code Quality Analysis
        uses: tynedev/markdown-todo@v1 # Example for TODOs, modify as needed

  build:
    name: Build Project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore --configuration Release

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'
      - name: Run Tests
        run: dotnet test --no-build --configuration Release

  deploy-github:
    name: Deploy to GitHub Releases
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            path/to/your/package.nupkg

  deploy-nuget:
    name: Deploy to nuget.org
    runs-on: ubuntu-latest
    needs: [gitleaks, security-check, dependency-check, code-tests, build, test]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'
      - name: Publish to NuGet
        run: dotnet nuget push path/to/your/package.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}